[
    {
        "name": "Websites and Web Apps",
        "anchor": "websites",
        "solutions": [
            {
                "name": "Deploy a secure web application across multiple regions",
                "url": "multi-region-webapp.html",
                "description": "This tutorial is a walkthrough of how to create, secure, and deploy a web application across multiple regions using a continuous delivery pipeline.",
                "imgSrc": "images/solution1/Architecture.png",
                "tags": [
                    "Cloud Foundry",
                    "Node.js",
                    "Continous Delivery"
                ]
            },
            {
                "name": "Scalable web app on Kubernetes",
                "url": "scalable-webapp-kubernetes.html",
                "description": "This tutorial is a walkthrough of how to scaffold a Java web application, run it locally in a container and then deploy it to a IBM Cloud Kubernetes cluster. Additionally, bind a custom domain, monitor the health of the environment and scale.",
                "imgSrc": "images/solution2/Architecture.png",
                "tags": [
                    "Docker",
                    "Kubernetes",
                    "Container Registry",
                    "Java"
                ]
            },
            {
                "name": "Accelerate delivery of static files using Object Storage and CDN",
                "url": "static-files-cdn.html",
                "description": "Host and serve website assets (images, videos, documents) and user generated content in a Cloud Object Storage and use a Content Delivery Network (CDN) for fast and secure delivery to users around the world.",
                "imgSrc": "images/solution3/Architecture.png",
                "tags": [
                    "Cloud Foundry",
                    "Node.js",
                    "Content Delivery Network",
                    "Cloud Object Storage"
                ]
            },
            {
                "name": "Web application on LAMP stack",
                "url": "lamp-stack.html",
                "description": "This tutorial walks you through the creation of an Ubuntu Linux virtual server, with Apache web server, MySQL, and PHP (the LAMP stack). To see the LAMP server in action, you will install and configure the WordPress open source application.",
                "imgSrc": "images/solution4/Architecture.png",
                "tags": [
                    "Virtual Servers",
                    "PHP",
                    "WordPress",
                    "Vulnerability Scanner"
                ]
            },
            {
                "name": "Automate deployment of environments using Schematics",
                "url": "infrastructure-as-code.html",
                "description": "Use a Schematics template to provision a Linux virtual server, with Apache web server, MySQL, and PHP server (LAMP stack) and Object Storage. You will then update the configuration to scale the resources and tune the environment.",
                "imgSrc": "images/solution10/Architecture.png",
                "tags": [
                    "Schematics",
                    "Virtual Servers",
                    "PHP",
                    "Object Storage"
                ]
            },
            {
                "name": "Automate deployment of environments using Terraform",
                "url": "infrastructure-as-code-terraform.html",
                "description": "Use a terraform configuration to provision a Linux virtual server, with Apache web server, MySQL, and PHP server (LAMP stack) and Object Storage. You will then update the configuration to scale the resources and tune the environment.",
                "imgSrc": "images/solution10/Architecture.png",
                "tags": [
                    "Virtual Servers",
                    "PHP",
                    "Object Storage"
                ]
            },
            {
                "name": "Use Virtual Servers to build highly available and scalable web app",
                "url": "highly-available-and-scalable-web-application.html",
                "description": "This tutorial walks you through the creation of a load balancer, two application servers running on Ubuntu with NGINX and PHP installed, one MySQL database server, and durable file storage to store application files and backups.",
                "imgSrc": "images/solution14/Architecture.png",
                "tags": [
                    "Virtual Servers",
                    "Load Balancer",
                    "PHP",
                    "File Storage"
                ]
            },
            {
                "name": "Modern web application using MEAN stack",
                "url": "mean-stack.html",
                "description": "This tutorial walks you through the creation of a web application using the popular MEAN stack. It is composed of a Mongo DB, Express web framework, Angular front end framework and a Node.js runtime.",
                "imgSrc": "images/solution7/Architecture.png",
                "tags": [
                    "Cloud Foundry",
                    "Node.js",
                    "Compose for MongoDB"
                ]
            },
            {
                "name": "SQL Database for Cloud Data",
                "url": "sql-database.html",
                "description": "This tutorial shows how to provision a SQL (relational) database service, create a table, and load a large data set (city information) into the database. Then, we deploy a web app to make use of that data and show how to access the cloud database.",
                "imgSrc": "images/solution5/Architecture.png",
                "tags": [
                    "Cloud Foundry",
                    "Python",
                    "Db2 Warehouse"
                ]
            },
            {
                "name": "Serverless web application and API",
                "url": "serverless-api-webapp.html",
                "description": "Create a serverless web application by hosting static website content in GitHub Pages and using Cloud Functions to implement the application backend.",
                "imgSrc": "images/solution8/Architecture.png",
                "tags": [
                    "Cloud Functions",
                    "API Gateway",
                    "Cloudant NoSQL DB"
                ]
            },
            {
                "name": "Analyze logs and monitor health of Cloud Foundry applications",
                "url": "application-log-analysis.html",
                "description": "Learn how the IBM Cloud Log Analysis service can be used to understand and diagnose activities of an app deployed in the IBM Cloud. Generate, search, analyze and visualize different log types using Elasticsearch and Kibana. Understand and diagnose application problems by using the IBM Cloud Log Analysis and Availability Monitoring services.",
                "imgSrc": "images/solution12/Architecture.png",
                "tags": [
                    "Cloud Foundry",
                    "Python",
                    "Log Analysis",
                    "Availability Monitoring"
                ]
            },
            {
                "name": "Analyze logs and monitor the health of Kubernetes applications",
                "url": "kubernetes-log-analysis-kibana.html",
                "description": "This tutorial walks you through creating a cluster and configuring the Log Analysis and the Monitoring service. Then, you will deploy an application to the cluster, use Kibana to view and analyze logs, and use Grafana to view health and metrics.",
                "imgSrc": "images/solution17/Architecture.png",
                "tags": [
                    "Kubernetes",
                    "Docker",
                    "Node.js",
                    "Log Analysis",
                    "Monitoring"
                ]
            },
            {
                "name": "Create, secure and manage REST APIs",
                "url": "create-manage-secure-apis.html",
                "description": "This tutorial demonstrates how to create a new REST API using the LoopBack Node.js API framework and then add management, visibility, security and rate limiting to your API using the API Connect service on IBM Cloud.",
                "imgSrc": "images/solution13/Architecture.png",
                "tags": [
                    "Cloud Foundry",
                    "Node.js",
                    "API Connect"
                ]
            }
        ]
    },
    {
        "name": "Mobile",
        "anchor": "mobile",
        "solutions": [
            {
                "name": "iOS mobile app with Push Notifications and Analytics",
                "url": "ios-mobile-push-analytics.html",
                "description": "Learn how easy it is to quickly create an iOS Swift application with high-value mobile services - Push Notifications and Mobile Analytics on IBM Cloud.",
                "imgSrc": "images/solution6/Architecture.png",
                "tags": [
                    "iOS",
                    "Swift",
                    "Push Notifications",
                    "Mobile Analytics"
                ]
            },
            {
                "name": "Android native mobile app with Push Notifications and Analytics",
                "url": "android-mobile-push-analytics.html",
                "description": "Learn how easy it is to quickly create an Android native application with high-value mobile services - Push Notifications and Mobile Analytics on IBM Cloud.",
                "imgSrc": "images/solution9/Architecture.png",
                "tags": [
                    "Android",
                    "Java",
                    "Push Notifications",
                    "Mobile Analytics"
                ]
            },
            {
                "name": "Hybrid mobile application with Push and Analytics",
                "url": "hybrid-mobile-push-analytics.html",
                "description": "Learn how easy it is to quickly create a hybrid Cordova application with high-value mobile services - Push Notifications and Mobile Analytics on IBM Cloud.",
                "imgSrc": "images/solution15/Architecture.png",
                "tags": [
                    "Cordova",
                    "Push Notifications",
                    "Mobile Analytics"
                ]
            },
            {
                "name": "Mobile application with a serverless backend",
                "url": "serverless-mobile-backend.html",
                "description": "Learn how to use Cloud Functions along with other cognitive and data services to build a serverless backend for a mobile application.",
                "imgSrc": "images/solution11/Architecture.png",
                "tags": [
                    "Cloud Functions",
                    "App ID",
                    "Cloudant NoSQL DB",
                    "Watson Tone Analyzer",
                    "Push Notifications"
                ]
            }
        ]
    },
    {
        "name": "Internet of Things",
        "anchor": "iot",
        "solutions": [
            {
                "name": "Gather, visualize and analyze IoT data",
                "url": "gather-visualize-analyze-iot-data.html",
                "description": "This tutorial walks you thru setting up an IoT device, gathering large amounts of data in the Watson IoT Platform, exploring data and creating visualizations and then using advanced machine learning services to analyze data.",
                "imgSrc": "images/solution16/Architecture.png",
                "tags": [
                    "Cloud Foundry",
                    "Internet of Things Platform",
                    "Cloudant",
                    "Data Science Experience"
                ]
            }
        ]
    },
    {
        "name": "Chatbots",
        "anchor": "chatbots",
        "solutions": [
            {
                "name": "Build a database-driven Slackbot",
                "url": "slack-chatbot-database-watson.html",
                "description": "Build a database-driven Slackbot with IBM Watson Conversation. The Conversation connector, Cloudant and IBM Cloud Functions are used for a serverless integration of the Conversation service with Slack. IBM Cloud Functions are also utilized for server actions within a dialog to reach out to Db2.",
                "imgSrc": "images/solution19/SlackbotArchitecture.png",
                "tags": [
                    "Cloud Foundry",
                    "IBM Watson Conversation",
                    "Cloudant NoSQL DB",
                    "Db2 Warehouse",
                    "IBM Cloud Functions",
                    "Slack"
                ]
            }
        ]
    },
    {
        "name": "Security",
        "anchor": "security",
        "solutions": [
            {
                "name": "Best practices for organizing users, teams, applications",
                "url": "users-teams-applications.html",
                "description": "This tutorial gives an overview of the concepts available in IBM Cloud to manage identity and access management and how they can be implemented to support the multiple development stages of an application.",
                "imgSrc": "images/solution20-users-teams-applications/architecture.png",
                "tags": [
                    "Identity and Access Management",
                    "Kubernetes",
                    "Container Registry"
                ]
            }
        ]
    }
]
